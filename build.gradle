buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
		propDepsVersion = '0.0.9.RELEASE'
	}
	repositories {
		mavenCentral()

		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://repo.spring.io/plugins-release" }
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {

		classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("io.spring.gradle:propdeps-plugin:${propDepsVersion}")
	}
}

plugins {
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
	id 'net.saliman.cobertura' version '2.5.4'
	id 'com.github.kt3k.coveralls' version '2.8.2'
	id "org.sonarqube" version "2.6"
}

apply plugin: 'net.saliman.cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

configure(allprojects) {
	apply plugin: 'java'

	apply plugin: 'propdeps'
	apply plugin: 'propdeps-maven'
	apply plugin: 'propdeps-idea'
	apply plugin: 'propdeps-eclipse'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}

}

def frameworkAgnostic = [':application:periphery:data']
configure(subprojects - frameworkAgnostic.collect { project(it) }) {
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		}
	}
}

configure([project(':application')]) {
	apply plugin: 'org.springframework.boot'
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.10.1'
}

ext {
	versions = [
			caffeine         : '2.6.2',
			commonsLang      : '3.8',
			guava            : '26.0-jre',
			jackson          : '2.9.6',
			jaxb             : '2.3.0',
			jug              : '3.1.5',
			immutables       : '2.7.1',
			nullableJsr305   : '3.0.2',
			springfoxSwagger2: '2.9.2'
	]
	log_versions = [
			janino         : '3.0.9',
			logstashLogback: '5.2'
	]
	test_versions = [
			assertJ            : '3.11.1',
			equalsVerifier     : '2.5.2',
			jdepend            : '2.9.1',
			jsonSchema         : '1.0.29',
			jsonSchemaValidator: '2.2.6',
			junit              : '4.12',
			junitParams        : '1.1.1',
			mockito            : '2.22.0',
	]
}

ext.app_tests = [
		integration_test: [
				"com.kjetland:mbknor-jackson-jsonschema_2.12:${test_versions.jsonSchema}",
				"com.github.fge:json-schema-validator:${test_versions.jsonSchemaValidator}"
		],
		spring_test     : [
				"org.springframework.boot:spring-boot-starter-test"
		],
		unit_test       : [
				"jdepend:jdepend:${test_versions.jdepend}",
				"junit:junit:${test_versions.junit}",
				"nl.jqno.equalsverifier:equalsverifier:${test_versions.equalsVerifier}",
				"org.assertj:assertj-core:${test_versions.assertJ}",
				"org.mockito:mockito-core:${test_versions.mockito}",
				"pl.pragmatists:JUnitParams:${test_versions.junitParams}"
		]
]

apply from: 'gradle/application.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/code-coverage.gradle'