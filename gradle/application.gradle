project("application") {
	description = "Application"

	dependencies {
		compile project(':application:configuration')
		optional ("org.springframework.boot:spring-boot-devtools")
	}

	springBoot {
		mainClassName = 'com.insurance.config.MainApplication'

		buildInfo {
			properties {
				additional = [
						'description': "${description}"
				]
			}
		}
	}

	// Make the System.properties available in the bootRun task.
	bootRun {
		systemProperties = System.properties
	}
}

project("application:adapter") {
	description = "Application adapter"

	dependencies {

		compileOnly 'org.projectlombok:lombok:1.18.26'
		annotationProcessor 'org.projectlombok:lombok:1.18.26'

		testCompileOnly 'org.projectlombok:lombok:1.18.26'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

		compile ("com.fasterxml.jackson.core:jackson-core:${versions.jackson}")
		compile ("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
		compile ("org.apache.commons:commons-lang3:${versions.commonsLang}")

		compile project(":application:periphery:data")

		testCompile app_tests.unit_test
	}
}

project("application:adapter-database") {
	description = "Application adapter database"

	dependencies {

		compile project(":application:periphery:data")
		compile project(':application:adapter')

		compileOnly 'org.projectlombok:lombok:1.18.26'
		annotationProcessor 'org.projectlombok:lombok:1.18.26'

		testCompileOnly 'org.projectlombok:lombok:1.18.26'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

		compile("org.springframework.boot:spring-boot-starter-data-jpa")
		compile('org.springframework.boot:spring-boot-starter-actuator')
		compile("org.apache.commons:commons-lang3:${versions.commonsLang}")
		compile("javax.xml.bind:jaxb-api:${versions.jaxb}")

		testCompile app_tests.unit_test
	}
}


project("application:configuration") {
	description = "Application configuration"

	dependencies {

		compile project(':application:adapter')
		compile project(':application:adapter-database')

		compile project(':application:core')
		compile project(':application:periphery:data')
		compile project(':application:periphery:web')


		compile ('org.springframework.boot:spring-boot-starter-aop')
		compile ('org.springframework.retry:spring-retry')

		compile ("com.h2database:h2")

		compile ("com.github.ben-manes.caffeine:caffeine:${versions.caffeine}")
		compile ("net.logstash.logback:logstash-logback-encoder:${log_versions.logstashLogback}")
		compile ("org.codehaus.janino:janino:${log_versions.janino}")
		compile ("org.apache.commons:commons-lang3:${versions.commonsLang}")

		compile project(":application:periphery:data")

		compileOnly 'org.projectlombok:lombok:1.18.26'
		annotationProcessor 'org.projectlombok:lombok:1.18.26'

		testCompileOnly 'org.projectlombok:lombok:1.18.26'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

		testCompile app_tests.unit_test
	}
}

project("application:core") {
	description = "Application core"

	dependencies {
		compile project(':application:adapter')

		compile("org.springframework.boot:spring-boot-starter-data-jpa")
		compile group: 'com.google.code.findbugs', name: 'jsr305', version: "${versions.nullableJsr305}"
		compile group: 'com.google.guava', name: 'guava', version: "${versions.guava}"
		compile group: 'org.apache.commons', name: 'commons-lang3', version: "${versions.commonsLang}"

		testCompile app_tests.unit_test
	}
}

project("application:periphery:data") {
	description = "Application periphery data"

	dependencies {

		compile("org.apache.commons:commons-lang3:${versions.commonsLang}")
		compile("javax.xml.bind:jaxb-api:${versions.jaxb}")

		compileOnly 'org.projectlombok:lombok:1.18.26'
		annotationProcessor 'org.projectlombok:lombok:1.18.26'

		testCompileOnly 'org.projectlombok:lombok:1.18.26'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'


		testCompile app_tests.unit_test
	}
}

project("application:periphery:web") {
	description = "Application periphery web"

	dependencies {
		compile project(':application:adapter')

		compile("com.fasterxml.uuid:java-uuid-generator:${versions.jug}")
		compile("org.springdoc:springdoc-openapi-ui:1.7.0")
		compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-hateoas")
		compile("org.springframework.boot:spring-boot-starter-aop")
		compile("org.springframework.data:spring-data-rest-hal-browser")
		compile('org.springframework.boot:spring-boot-starter-actuator')

		compile("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}")

		testCompile app_tests.unit_test
	}
}